diff -uprN a/drivers/usb/serial/option.c b/drivers/usb/serial/option.c
--- a/drivers/usb/serial/option.c	2023-07-21 12:40:44.296578222 +0800
+++ b/drivers/usb/serial/option.c	2023-07-21 10:29:01.604695277 +0800
@@ -585,6 +585,10 @@ static void option_instat_callback(struc
 
 
 static const struct usb_device_id option_ids[] = {
+  //+add by airm2m
+  { USB_DEVICE(0x19D1, 0x0001) }, /* AIR780 */
+  { USB_DEVICE(0x2ECC, 0xA000) }, /* AIR600 */
+  //-add by airm2m
 	{ USB_DEVICE(OPTION_VENDOR_ID, OPTION_PRODUCT_COLT) },
 	{ USB_DEVICE(OPTION_VENDOR_ID, OPTION_PRODUCT_RICOLA) },
 	{ USB_DEVICE(OPTION_VENDOR_ID, OPTION_PRODUCT_RICOLA_LIGHT) },
@@ -2146,6 +2150,9 @@ static struct usb_serial_driver option_1
 #ifdef CONFIG_PM
 	.suspend           = usb_wwan_suspend,
 	.resume            = usb_wwan_resume,
+  //+add by airm2m
+	.reset_resume      = usb_wwan_resume,
+  //-add by airm2m
 #endif
 };
 
@@ -2188,7 +2195,20 @@ static int option_probe(struct usb_seria
 	 */
 	if (device_flags & NUMEP2 && iface_desc->bNumEndpoints != 2)
 		return -ENODEV;
-
+  //+add by airm2m
+  if(serial->dev->descriptor.idVendor == cpu_to_le16(0x2ECC) &&
+      serial->dev->descriptor.idProduct == cpu_to_le16(0xA000)) {
+    if (serial->interface->cur_altsetting->desc.bInterfaceClass != 0xFF)
+      return -ENODEV;
+    else if (serial->interface->cur_altsetting->desc.bInterfaceNumber <= 4)
+      return -ENODEV;
+  }
+  if(serial->dev->descriptor.idVendor == cpu_to_le16(0x19D1) &&
+      serial->dev->descriptor.idProduct == cpu_to_le16(0x0001)) {
+    if (serial->interface->cur_altsetting->desc.bInterfaceNumber <= 1)
+      return -ENODEV;
+  }
+  //-add by airm2m
 	/* Store the device flags so we can use them during attach. */
 	usb_set_serial_data(serial, (void *)device_flags);
 
diff -uprN a/drivers/usb/serial/usb_wwan.c b/drivers/usb/serial/usb_wwan.c
--- a/drivers/usb/serial/usb_wwan.c	2023-07-21 12:40:44.300578178 +0800
+++ b/drivers/usb/serial/usb_wwan.c	2023-07-21 10:29:01.608695212 +0800
@@ -479,7 +479,15 @@ static struct urb *usb_wwan_setup_urb(st
 
 	if (intfdata->use_zlp && dir == USB_DIR_OUT)
 		urb->transfer_flags |= URB_ZERO_PACKET;
-
+  //+add by airm2m
+  if (dir == USB_DIR_OUT) {
+    struct usb_device_descriptor *desc = &serial->dev->descriptor;
+    if (desc->idVendor == cpu_to_le16(0x2ECC) && desc->idProduct == cpu_to_le16(0xA000))                                                              
+      urb->transfer_flags|= URB_ZERO_PACKET;
+    if (desc->idVendor == cpu_to_le16(0x19D1) && desc->idProduct == cpu_to_le16(0x0001))
+      urb->transfer_flags|= URB_ZERO_PACKET;
+  }
+  //-add by airm2m 
 	return urb;
 }
 
